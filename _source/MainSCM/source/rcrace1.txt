:RCRACE1
thread 'RCRACE1'
gosub @RCRACE1_46
if
wasted_or_busted
jf @RCRACE1_37
gosub @RCRACE1_4896

:RCRACE1_37
gosub @RCRACE1_5107
end_thread

:RCRACE1_46
$ONMISSION = 1 // integer values
$1084 = 1 // integer values
if
  $8241 == 0 // integer values
jf @RCRACE1_80
increment_mission_attempts

:RCRACE1_80
wait 0
054C: use_GXT_table 'RCRACE1'
$8236 = 50 // integer values
$8242 = 720.21 // floating-point values
$8243 = 723.979 // floating-point values
$8244 = 11.095 // floating-point values
$8245 = 772.386 // floating-point values
$8246 = 737.37 // floating-point values
$8247 = 15.651 // floating-point values
$8248 = 801.8997 // floating-point values
$8249 = 755.155 // floating-point values
$8250 = 14.029 // floating-point values
$8251 = 818.443 // floating-point values
$8252 = 723.4467 // floating-point values
$8253 = 13.89174 // floating-point values
$8254 = 789.7374 // floating-point values
$8255 = 689.6965 // floating-point values
$8256 = 13.68476 // floating-point values
$8257 = 840.7286 // floating-point values
$8258 = 673.7933 // floating-point values
$8259 = 12.00719 // floating-point values
$8260 = 881.6089 // floating-point values
$8261 = 694.4305 // floating-point values
$8262 = 11.47722 // floating-point values
$8263 = 869.6669 // floating-point values
$8264 = 734.155 // floating-point values
$8265 = 18.03658 // floating-point values
$8266 = 857.4133 // floating-point values
$8267 = 775.2335 // floating-point values
$8268 = 11.75751 // floating-point values
$8269 = 879.8929 // floating-point values
$8270 = 804.4685 // floating-point values
$8271 = 12.73355 // floating-point values
$8272 = 888.0801 // floating-point values
$8273 = 838.5257 // floating-point values
$8274 = 13.69488 // floating-point values
$8275 = 874.35 // floating-point values
$8276 = 866.9433 // floating-point values
$8277 = 13.12859 // floating-point values
$8278 = 815.8032 // floating-point values
$8279 = 881.502 // floating-point values
$8280 = 11.89595 // floating-point values
$8281 = 808.4997 // floating-point values
$8282 = 851.3824 // floating-point values
$8283 = 9.721323 // floating-point values
$8284 = 824.7369 // floating-point values
$8285 = 827.1093 // floating-point values
$8286 = 8.638121 // floating-point values
$8287 = 795.3524 // floating-point values
$8288 = 821.6034 // floating-point values
$8289 = 10.47627 // floating-point values
$8290 = 766.2229 // floating-point values
$8291 = 835.0671 // floating-point values
$8292 = 12.00815 // floating-point values
$8293 = 750.0553 // floating-point values
$8294 = 882.0937 // floating-point values
$8295 = 13.63987 // floating-point values
$8296 = 726.0835 // floating-point values
$8297 = 840.0163 // floating-point values
$8298 = 14.14287 // floating-point values
$8299 = 756.2438 // floating-point values
$8300 = 792.2355 // floating-point values
$8301 = 17.65154 // floating-point values
$8302 = 727.5995 // floating-point values
$8303 = 775.9979 // floating-point values
$8304 = 11.35199 // floating-point values
$8305 = 700.1736 // floating-point values
$8306 = 800.7557 // floating-point values
$8307 = 12.54427 // floating-point values
$8308 = 673.1154 // floating-point values
$8309 = 831.9152 // floating-point values
$8310 = 14.80559 // floating-point values
$8311 = 672.1528 // floating-point values
$8312 = 798.6282 // floating-point values
$8313 = 12.67831 // floating-point values
$8314 = 692.795 // floating-point values
$8315 = 761.6599 // floating-point values
$8316 = 10.67259 // floating-point values
$8317 = 741.0423 // floating-point values
$8318 = 716.2507 // floating-point values
$8319 = 11.22578 // floating-point values
$8320 = 772.386 // floating-point values
$8321 = 737.37 // floating-point values
$8322 = 15.651 // floating-point values
$8323 = 801.8997 // floating-point values
$8324 = 755.155 // floating-point values
$8325 = 14.029 // floating-point values
$8326 = 818.443 // floating-point values
$8327 = 723.4467 // floating-point values
$8328 = 13.89174 // floating-point values
$8329 = 789.7374 // floating-point values
$8330 = 689.6965 // floating-point values
$8331 = 13.68476 // floating-point values
$8332 = 840.7286 // floating-point values
$8333 = 673.7933 // floating-point values
$8334 = 12.00719 // floating-point values
$8335 = 881.6089 // floating-point values
$8336 = 694.4305 // floating-point values
$8337 = 11.47722 // floating-point values
$8338 = 869.6669 // floating-point values
$8339 = 734.155 // floating-point values
$8340 = 18.03658 // floating-point values
$8341 = 857.4133 // floating-point values
$8342 = 775.2335 // floating-point values
$8343 = 11.75751 // floating-point values
$8344 = 879.8929 // floating-point values
$8345 = 804.4685 // floating-point values
$8346 = 12.73355 // floating-point values
$8347 = 888.0801 // floating-point values
$8348 = 838.5257 // floating-point values
$8349 = 13.69488 // floating-point values
$8350 = 874.35 // floating-point values
$8351 = 866.9433 // floating-point values
$8352 = 13.12859 // floating-point values
$8353 = 815.8032 // floating-point values
$8354 = 881.502 // floating-point values
$8355 = 11.89595 // floating-point values
$8356 = 808.4997 // floating-point values
$8357 = 851.3824 // floating-point values
$8358 = 9.721323 // floating-point values
$8359 = 824.7369 // floating-point values
$8360 = 827.1093 // floating-point values
$8361 = 8.638121 // floating-point values
$8362 = 795.3524 // floating-point values
$8363 = 821.6034 // floating-point values
$8364 = 10.47627 // floating-point values
$8365 = 766.2229 // floating-point values
$8366 = 835.0671 // floating-point values
$8367 = 12.00815 // floating-point values
$8368 = 750.0553 // floating-point values
$8369 = 882.0937 // floating-point values
$8370 = 13.63987 // floating-point values
$8371 = 726.0835 // floating-point values
$8372 = 840.0163 // floating-point values
$8373 = 14.14287 // floating-point values
$8374 = 756.2438 // floating-point values
$8375 = 792.2355 // floating-point values
$8376 = 17.65154 // floating-point values
$8377 = 727.5995 // floating-point values
$8378 = 775.9979 // floating-point values
$8379 = 11.35199 // floating-point values
$8380 = 700.1736 // floating-point values
$8381 = 800.7557 // floating-point values
$8382 = 12.54427 // floating-point values
$8383 = 673.1154 // floating-point values
$8384 = 831.9152 // floating-point values
$8385 = 14.80559 // floating-point values
$8386 = 672.1528 // floating-point values
$8387 = 798.6282 // floating-point values
$8388 = 12.67831 // floating-point values
$8389 = 692.795 // floating-point values
$8390 = 761.6599 // floating-point values
$8391 = 10.67259 // floating-point values
$8392 = 741.0423 // floating-point values
$8393 = 716.2507 // floating-point values
$8394 = 11.22578 // floating-point values
$8175 = 740.8333 // floating-point values
$8176 = 721.5853 // floating-point values
$8177 = 11.0126 // floating-point values
$8178 = 740.5471 // floating-point values
$8179 = 718.5853 // floating-point values
$8180 = 11.0884 // floating-point values
$8181 = 740.2183 // floating-point values
$8182 = 715.5853 // floating-point values
$8183 = 11.1233 // floating-point values
$8160 = 262.9725 // floating-point values
$8227 = 0 // integer values
$8223 = 0 // integer values
$8224 = 0 // integer values
$8225 = 0 // integer values
$8226 = 0 // integer values
$8164 = 3.5 // floating-point values
$8165 = 3.5 // floating-point values
$8166 = 3.5 // floating-point values
$8395 = 0 // integer values
$8396 = 0 // integer values
$8397 = 0 // integer values
$8398 = 2 // integer values
$8399 = 1 // integer values
$8400 = 0 // integer values
Model.Load(#RCBANDIT)

:RCRACE1_1843
if
   not Model.Available(#RCBANDIT)
jf @RCRACE1_1870
wait 0
jump @RCRACE1_1843

:RCRACE1_1870
$8240 = Player.WantedLevel($PLAYER_CHAR)
01F7: set_player $PLAYER_CHAR ignored_by_cops_state_to 1
Player.ClearWantedLevel($PLAYER_CHAR)
00DA: $8213 = player $PLAYER_CHAR car
$8240 = Player.WantedLevel($PLAYER_CHAR)
0395: clear_area 1 at 757.152 811.371 range 500.0 500.0
Player.CanMove($PLAYER_CHAR) = False
02A3: enable_widescreen 1
010C: change_player_into_rc_buggy $PLAYER_CHAR at 739.924 712.5853 11.1484 262.9725
$8219 = Player.RC_car($PLAYER_CHAR)
04D6: enable_rc_car_detonation 0
$8214 = Car.Create(#RCBANDIT, $8175, $8176, $8177)
03AB: set_car $8214 strong 1
03ED: set_car $8214 not_damaged_when_upside_down 1
Car.Angle($8214) = $8160
Car.SetToNormalDriver($8214)
00AE: set_vehicle $8214 traffic_behavior_to 2
Car.SetMaxSpeed($8214, 26.0)
Car.ImmuneToNonPlayer($8214) = True
04E0: car $8214 abandon_path_radius 1
$8215 = Car.Create(#RCBANDIT, $8178, $8179, $8180)
03AB: set_car $8215 strong 1
03ED: set_car $8215 not_damaged_when_upside_down 1
Car.Angle($8215) = $8160
Car.SetToNormalDriver($8215)
00AE: set_vehicle $8215 traffic_behavior_to 2
Car.SetMaxSpeed($8215, 20.0)
Car.ImmuneToNonPlayer($8215) = True
04E0: car $8215 abandon_path_radius 1
$8216 = Car.Create(#RCBANDIT, $8181, $8182, $8183)
03AB: set_car $8216 strong 1
03ED: set_car $8216 not_damaged_when_upside_down 1
Car.Angle($8216) = $8160
Car.SetToNormalDriver($8216)
00AE: set_vehicle $8216 traffic_behavior_to 2
Car.SetMaxSpeed($8216, 23.0)
Car.ImmuneToNonPlayer($8216) = True
04E0: car $8216 abandon_path_radius 1
Camera.SetPosition(742.2905, 724.4449, 12.35194, 0.0, 0.0, 0.0)
Camera.PointAt(742.1665, 723.5028, 12.04059, 2)
00C0: set_current_time 10 0
set_weather 4
fade 1 2000

:RCRACE1_2307
if
fading
jf @RCRACE1_2331
wait 0
jump @RCRACE1_2307

:RCRACE1_2331
16@ = 0 // integer values

:RCRACE1_2338
if
  5000 > 16@ // integer values
jf @RCRACE1_2407
wait 0
00BC: text_highpriority 'RCR1_1' 5000 ms 2  // ~g~Compete in a checkpoint race with 3 other RC Cars.
if
00E1:   player 0 pressed_button 16
jf @RCRACE1_2400
jump @RCRACE1_2661

:RCRACE1_2400
jump @RCRACE1_2338

:RCRACE1_2407
Camera.SetPosition(893.1815, 624.3833, 41.4995, 0.0, 0.0, 0.0)
Camera.PointAt(892.6742, 625.2084, 41.25115, 2)
16@ = 0 // integer values

:RCRACE1_2465
if
  5000 > 16@ // integer values
jf @RCRACE1_2534
wait 0
00BC: text_highpriority 'RCR1_2' 5000 ms 2  // ~g~Be the first to complete two laps of the track to win!
if
00E1:   player 0 pressed_button 16
jf @RCRACE1_2527
jump @RCRACE1_2661

:RCRACE1_2527
jump @RCRACE1_2465

:RCRACE1_2534
Camera.SetPosition(743.5344, 710.3741, 12.71469, 0.0, 0.0, 0.0)
Camera.PointAt(743.0029, 711.2059, 12.55033, 2)
16@ = 0 // integer values

:RCRACE1_2592
if
  5000 > 16@ // integer values
jf @RCRACE1_2661
wait 0
00BC: text_highpriority 'RCR1_3' 5000 ms 2  // ~g~If you wish to quit this mission press the ~h~~k~~PED_FIREWEAPON~ ~g~button to detonate your RC car.
if
00E1:   player 0 pressed_button 16
jf @RCRACE1_2654
jump @RCRACE1_2661

:RCRACE1_2654
jump @RCRACE1_2592

:RCRACE1_2661
if
   not Car.Wrecked($8219)
jf @RCRACE1_2697
03EB: clear_small_messages_only
Camera.OnVehicle($8219, 3, 2)
02A3: enable_widescreen 0
wait 500

:RCRACE1_2697
0084: $8237 = $8236 // integer values and handles
$8237 -= 1 // integer values
Player.CanMove($PLAYER_CHAR) = False
03BF: set_player $PLAYER_CHAR ignored_by_everyone_to 1
03F4: set_all_vehicles_apply_damage_rules 0
00BA: text_styled 'RACE2' 1100 ms 4  // ~g~3
018C: play_sound 7 at 0.0 0.0 0.0
wait 1000
00BA: text_styled 'RACE3' 1100 ms 4  // ~g~2
018C: play_sound 8 at 0.0 0.0 0.0
wait 1000
00BA: text_styled 'RACE4' 1100 ms 4  // ~g~1
018C: play_sound 9 at 0.0 0.0 0.0
wait 1000
00BA: text_styled 'RACE5' 800 ms 4  // ~g~GO!
018C: play_sound 10 at 0.0 0.0 0.0
Player.CanMove($PLAYER_CHAR) = True
03BF: set_player $PLAYER_CHAR ignored_by_everyone_to 0
03C4: set_status_text_to $8398 0 'RCR1_4'  // laps left:
if
   Car.Wrecked($8214)
jf @RCRACE1_2933
jump @RCRACE1_4896

:RCRACE1_2933
if
   Car.Wrecked($8215)
jf @RCRACE1_2956
jump @RCRACE1_4896

:RCRACE1_2956
if
   Car.Wrecked($8216)
jf @RCRACE1_2979
jump @RCRACE1_4896

:RCRACE1_2979
gosub @RCRACE1_5192
0086: $8187 = $8202 // floating-point values only
0086: $8188 = $8203 // floating-point values only
0086: $8189 = $8204 // floating-point values only
0086: $8190 = $8205 // floating-point values only
0086: $8191 = $8206 // floating-point values only
0086: $8192 = $8207 // floating-point values only
0086: $8193 = $8202 // floating-point values only
0086: $8194 = $8203 // floating-point values only
0086: $8195 = $8204 // floating-point values only
0086: $8196 = $8202 // floating-point values only
0086: $8197 = $8203 // floating-point values only
0086: $8198 = $8204 // floating-point values only
0086: $8199 = $8202 // floating-point values only
0086: $8200 = $8203 // floating-point values only
0086: $8201 = $8204 // floating-point values only
018A: $8208 = create_checkpoint_at $8187 $8188 $8189
0167: $8209 = create_marker_at $8190 $8191 $8192 color 5 flag 2
0166: set_marker $8209 brightness_to 1
Car.DriveTo($8214, $8193, $8194, $8195)
Car.DriveTo($8215, $8196, $8197, $8198)
Car.DriveTo($8216, $8199, $8200, $8201)
$8229 = 0 // integer values
03C3: set_timer_with_text_to $8229 type 0 text 'RCH1_5'  // Time:
if
   Car.Wrecked($8219)
jf @RCRACE1_3232
jump @RCRACE1_4896

:RCRACE1_3232
if
001C:   $8236 > $8223 // integer values
jf @RCRACE1_4889
wait 0
0395: clear_area 1 at -447.8 1442.95 range 10.0 120.0
$8228 = 0 // integer values
if
   not Car.Wrecked($8219)
jf @RCRACE1_3526
if
01AD:   car $8219 sphere 0 near_point $8187 $8188 radius 4.2 4.2
jf @RCRACE1_3526
$8223 += 1 // integer values
018C: play_sound 1 at 0.0 0.0 0.0
Marker.Disable($8208)
Marker.Disable($8209)
0084: $8227 = $8223 // integer values and handles
gosub @RCRACE1_5192
0086: $8187 = $8202 // floating-point values only
0086: $8188 = $8203 // floating-point values only
0086: $8189 = $8204 // floating-point values only
0086: $8190 = $8205 // floating-point values only
0086: $8191 = $8206 // floating-point values only
0086: $8192 = $8207 // floating-point values only
if
003A:   $8223 == $8236 // integer values and handles
jf @RCRACE1_3461
jump @RCRACE1_4913

:RCRACE1_3461
018A: $8208 = create_checkpoint_at $8187 $8188 $8189
if
803A:   not  $8223 == $8237 // integer values and handles
jf @RCRACE1_3526
0167: $8209 = create_marker_at $8190 $8191 $8192 color 5 flag 2
0166: set_marker $8209 brightness_to 1
0168: set_blip $8209 size 2

:RCRACE1_3526
if
   not Car.Wrecked($8214)
jf @RCRACE1_3818
0084: $8218 = $8214 // integer values and handles
0084: $8227 = $8224 // integer values and handles
0086: $8184 = $8175 // floating-point values only
0086: $8185 = $8176 // floating-point values only
0086: $8186 = $8177 // floating-point values only
0084: $8234 = $8230 // integer values and handles
gosub @RCRACE1_8494
0086: $8175 = $8184 // floating-point values only
0086: $8176 = $8185 // floating-point values only
0086: $8177 = $8186 // floating-point values only
0084: $8230 = $8234 // integer values and handles
if
   not Car.Wrecked($8214)
jf @RCRACE1_3818
if
01AD:   car $8214 sphere 0 near_point $8193 $8194 radius $8164 $8164
jf @RCRACE1_3818
$8224 += 1 // integer values
0084: $8227 = $8224 // integer values and handles
gosub @RCRACE1_5192
0086: $8193 = $8202 // floating-point values only
0086: $8194 = $8203 // floating-point values only
0086: $8195 = $8204 // floating-point values only
if
003A:   $8224 == $8236 // integer values and handles
jf @RCRACE1_3762
00BC: text_highpriority 'RACEFA' 5000 ms 1  // ~r~You failed to win the race!
jump @RCRACE1_4896

:RCRACE1_3762
if
  $8164 == 7.0 // floating-point values
jf @RCRACE1_3804
Car.DriveTo($8214, $8193, $8194, $8195)
jump @RCRACE1_3818

:RCRACE1_3804
02C2: car $8214 drive_to_point $8193 $8194 $8195

:RCRACE1_3818
if
   not Car.Wrecked($8215)
jf @RCRACE1_4110
0084: $8218 = $8215 // integer values and handles
0084: $8227 = $8225 // integer values and handles
0086: $8184 = $8178 // floating-point values only
0086: $8185 = $8179 // floating-point values only
0086: $8186 = $8180 // floating-point values only
0084: $8234 = $8231 // integer values and handles
gosub @RCRACE1_8494
0086: $8178 = $8184 // floating-point values only
0086: $8179 = $8185 // floating-point values only
0086: $8180 = $8186 // floating-point values only
0084: $8231 = $8234 // integer values and handles
if
   not Car.Wrecked($8215)
jf @RCRACE1_4110
if
01AD:   car $8215 sphere 0 near_point $8196 $8197 radius $8165 $8165
jf @RCRACE1_4110
$8225 += 1 // integer values
0084: $8227 = $8225 // integer values and handles
gosub @RCRACE1_5192
0086: $8196 = $8202 // floating-point values only
0086: $8197 = $8203 // floating-point values only
0086: $8198 = $8204 // floating-point values only
if
003A:   $8225 == $8236 // integer values and handles
jf @RCRACE1_4054
00BC: text_highpriority 'RACEFA' 5000 ms 1  // ~r~You failed to win the race!
jump @RCRACE1_4896

:RCRACE1_4054
if
  $8165 == 7.0 // floating-point values
jf @RCRACE1_4096
Car.DriveTo($8215, $8196, $8197, $8198)
jump @RCRACE1_4110

:RCRACE1_4096
02C2: car $8215 drive_to_point $8196 $8197 $8198

:RCRACE1_4110
if
   not Car.Wrecked($8216)
jf @RCRACE1_4402
0084: $8218 = $8216 // integer values and handles
0084: $8227 = $8226 // integer values and handles
0086: $8184 = $8181 // floating-point values only
0086: $8185 = $8182 // floating-point values only
0086: $8186 = $8183 // floating-point values only
0084: $8234 = $8232 // integer values and handles
gosub @RCRACE1_8494
0086: $8181 = $8184 // floating-point values only
0086: $8182 = $8185 // floating-point values only
0086: $8183 = $8186 // floating-point values only
0084: $8232 = $8234 // integer values and handles
if
   not Car.Wrecked($8216)
jf @RCRACE1_4402
if
01AD:   car $8216 sphere 0 near_point $8199 $8200 radius $8166 $8166
jf @RCRACE1_4402
$8226 += 1 // integer values
0084: $8227 = $8226 // integer values and handles
gosub @RCRACE1_5192
0086: $8199 = $8202 // floating-point values only
0086: $8200 = $8203 // floating-point values only
0086: $8201 = $8204 // floating-point values only
if
003A:   $8226 == $8236 // integer values and handles
jf @RCRACE1_4346
00BC: text_highpriority 'RACEFA' 5000 ms 1  // ~r~You failed to win the race!
jump @RCRACE1_4896

:RCRACE1_4346
if
  $8166 == 7.0 // floating-point values
jf @RCRACE1_4388
Car.DriveTo($8216, $8199, $8200, $8201)
jump @RCRACE1_4402

:RCRACE1_4388
02C2: car $8216 drive_to_point $8199 $8200 $8201

:RCRACE1_4402
if
  $8228 == 0 // integer values
jf @RCRACE1_4434
00BC: text_highpriority 'FIRST' 100 ms 1  // ~b~1st

:RCRACE1_4434
if
  $8228 == 1 // integer values
jf @RCRACE1_4466
00BC: text_highpriority 'SECOND' 100 ms 1  // ~b~2nd

:RCRACE1_4466
if
  $8228 == 2 // integer values
jf @RCRACE1_4498
00BC: text_highpriority 'THIRD' 100 ms 1  // ~b~3rd

:RCRACE1_4498
if
  $8228 == 3 // integer values
jf @RCRACE1_4530
00BC: text_highpriority 'FOURTH' 100 ms 1  // ~b~4th

:RCRACE1_4530
if
003A:   $8223 == $8237 // integer values and handles
jf @RCRACE1_4582
04D5: create_corona_at $8187 $8188 $8189 radius 3.8 type 6 flare 0 RGB 100 5 5
jump @RCRACE1_4611

:RCRACE1_4582
04D5: create_corona_at $8187 $8188 $8189 radius 3.8 type 6 flare 0 RGB 255 137 205

:RCRACE1_4611
if
   Car.Wrecked($8219)
jf @RCRACE1_4634
jump @RCRACE1_4896

:RCRACE1_4634
if
  $8223 > 24 // integer values
jf @RCRACE1_4697
if
  $8400 == 0 // integer values
jf @RCRACE1_4697
0151: remove_status_text $8398
03C4: set_status_text_to $8399 0 'RCR1_4'  // laps left:
$8400 = 1 // integer values

:RCRACE1_4697
if
   not Car.Wrecked($8219)
jf @RCRACE1_4804
if
80B0:   not car $8219 0 595.94 930.07 950.085 606.168
jf @RCRACE1_4804
if
00B0:   car $8219 0 473.016 1102.161 939.0 217.567
jf @RCRACE1_4804
00BC: text_highpriority 'RCR1_6' 3000 ms 1  // ~g~Your RC Car is going out of range!

:RCRACE1_4804
if
   not Car.Wrecked($8219)
jf @RCRACE1_4882
if
80B0:   not car $8219 0 473.016 1102.161 939.0 217.567
jf @RCRACE1_4882
0409: blow_up_rc_buggy
00BC: text_highpriority 'RCR1_7' 5000 ms 1  // ~r~Your RC Car went out of range!
jump @RCRACE1_4896

:RCRACE1_4882
jump @RCRACE1_3232

:RCRACE1_4889
jump @RCRACE1_4913

:RCRACE1_4896
00BA: text_styled 'M_FAIL' 2000 ms 1  // MISSION FAILED!
return

:RCRACE1_4913
0084: $8395 = $8229 // integer values and handles
$8395 /= 1000 // integer values
042E: downdate_integer_stat 4 to $8395
0084: $8397 = $8395 // integer values and handles
$8397 /= 60 // integer values
0084: $8396 = $8397 // integer values and handles
$8396 *= 60 // integer values
0060: $8395 -= $8396 // integer values
if
  $8395 >= 10 // integer values
jf @RCRACE1_5020
02FD: text_2numbers_lowpriority 'RCH1_9' $8397 $8395 7000 flag 1  // ~b~TOTAL TIME: ~1~:~1~
jump @RCRACE1_5041

:RCRACE1_5020
02FD: text_2numbers_lowpriority 'RCH1_10' $8397 $8395 7000 flag 1  // ~b~TOTAL TIME: ~1~:0~1~

:RCRACE1_5041
if
  $8241 == 0 // integer values
jf @RCRACE1_5072
030C: progress_made += 1
0595: mission_complete
$8241 = 1 // integer values

:RCRACE1_5072
Player.Money($PLAYER_CHAR) += 100
01E3: text_1number_styled 'M_PASS' number 100 time 5000 style 1  // MISSION PASSED! $~1~
Player.ClearWantedLevel($PLAYER_CHAR)
0394: play_music 1
return

:RCRACE1_5107
04DB: exit_rc_mode
Marker.Disable($8208)
Marker.Disable($8209)
Model.Destroy(#RCBANDIT)
Car.Destroy($8214)
Car.Destroy($8215)
Car.Destroy($8216)
014F: stop_timer $8229
$ONMISSION = 0 // integer values
$1084 = 0 // integer values
$399 = 1 // integer values
04D6: enable_rc_car_detonation 1
01F7: set_player $PLAYER_CHAR ignored_by_cops_state_to 0
0151: remove_status_text $8398
0151: remove_status_text $8399
01B7: release_weather
mission_cleanup
return

:RCRACE1_5192
if
  $8227 == 0 // integer values
jf @RCRACE1_5258
0086: $8202 = $8245 // floating-point values only
0086: $8203 = $8246 // floating-point values only
0086: $8204 = $8247 // floating-point values only
0086: $8205 = $8248 // floating-point values only
0086: $8206 = $8249 // floating-point values only
0086: $8207 = $8250 // floating-point values only

:RCRACE1_5258
if
  $8227 == 1 // integer values
jf @RCRACE1_5324
0086: $8202 = $8248 // floating-point values only
0086: $8203 = $8249 // floating-point values only
0086: $8204 = $8250 // floating-point values only
0086: $8205 = $8251 // floating-point values only
0086: $8206 = $8252 // floating-point values only
0086: $8207 = $8253 // floating-point values only

:RCRACE1_5324
if
  $8227 == 2 // integer values
jf @RCRACE1_5390
0086: $8202 = $8251 // floating-point values only
0086: $8203 = $8252 // floating-point values only
0086: $8204 = $8253 // floating-point values only
0086: $8205 = $8254 // floating-point values only
0086: $8206 = $8255 // floating-point values only
0086: $8207 = $8256 // floating-point values only

:RCRACE1_5390
if
  $8227 == 3 // integer values
jf @RCRACE1_5456
0086: $8202 = $8254 // floating-point values only
0086: $8203 = $8255 // floating-point values only
0086: $8204 = $8256 // floating-point values only
0086: $8205 = $8257 // floating-point values only
0086: $8206 = $8258 // floating-point values only
0086: $8207 = $8259 // floating-point values only

:RCRACE1_5456
if
  $8227 == 4 // integer values
jf @RCRACE1_5522
0086: $8202 = $8257 // floating-point values only
0086: $8203 = $8258 // floating-point values only
0086: $8204 = $8259 // floating-point values only
0086: $8205 = $8260 // floating-point values only
0086: $8206 = $8261 // floating-point values only
0086: $8207 = $8262 // floating-point values only

:RCRACE1_5522
if
  $8227 == 5 // integer values
jf @RCRACE1_5588
0086: $8202 = $8260 // floating-point values only
0086: $8203 = $8261 // floating-point values only
0086: $8204 = $8262 // floating-point values only
0086: $8205 = $8263 // floating-point values only
0086: $8206 = $8264 // floating-point values only
0086: $8207 = $8265 // floating-point values only

:RCRACE1_5588
if
  $8227 == 6 // integer values
jf @RCRACE1_5654
0086: $8202 = $8263 // floating-point values only
0086: $8203 = $8264 // floating-point values only
0086: $8204 = $8265 // floating-point values only
0086: $8205 = $8266 // floating-point values only
0086: $8206 = $8267 // floating-point values only
0086: $8207 = $8268 // floating-point values only

:RCRACE1_5654
if
  $8227 == 7 // integer values
jf @RCRACE1_5720
0086: $8202 = $8266 // floating-point values only
0086: $8203 = $8267 // floating-point values only
0086: $8204 = $8268 // floating-point values only
0086: $8205 = $8269 // floating-point values only
0086: $8206 = $8270 // floating-point values only
0086: $8207 = $8271 // floating-point values only

:RCRACE1_5720
if
  $8227 == 8 // integer values
jf @RCRACE1_5786
0086: $8202 = $8269 // floating-point values only
0086: $8203 = $8270 // floating-point values only
0086: $8204 = $8271 // floating-point values only
0086: $8205 = $8272 // floating-point values only
0086: $8206 = $8273 // floating-point values only
0086: $8207 = $8274 // floating-point values only

:RCRACE1_5786
if
  $8227 == 9 // integer values
jf @RCRACE1_5852
0086: $8202 = $8272 // floating-point values only
0086: $8203 = $8273 // floating-point values only
0086: $8204 = $8274 // floating-point values only
0086: $8205 = $8275 // floating-point values only
0086: $8206 = $8276 // floating-point values only
0086: $8207 = $8277 // floating-point values only

:RCRACE1_5852
if
  $8227 == 10 // integer values
jf @RCRACE1_5918
0086: $8202 = $8275 // floating-point values only
0086: $8203 = $8276 // floating-point values only
0086: $8204 = $8277 // floating-point values only
0086: $8205 = $8278 // floating-point values only
0086: $8206 = $8279 // floating-point values only
0086: $8207 = $8280 // floating-point values only

:RCRACE1_5918
if
  $8227 == 11 // integer values
jf @RCRACE1_5984
0086: $8202 = $8278 // floating-point values only
0086: $8203 = $8279 // floating-point values only
0086: $8204 = $8280 // floating-point values only
0086: $8205 = $8281 // floating-point values only
0086: $8206 = $8282 // floating-point values only
0086: $8207 = $8283 // floating-point values only

:RCRACE1_5984
if
  $8227 == 12 // integer values
jf @RCRACE1_6050
0086: $8202 = $8281 // floating-point values only
0086: $8203 = $8282 // floating-point values only
0086: $8204 = $8283 // floating-point values only
0086: $8205 = $8284 // floating-point values only
0086: $8206 = $8285 // floating-point values only
0086: $8207 = $8286 // floating-point values only

:RCRACE1_6050
if
  $8227 == 13 // integer values
jf @RCRACE1_6116
0086: $8202 = $8284 // floating-point values only
0086: $8203 = $8285 // floating-point values only
0086: $8204 = $8286 // floating-point values only
0086: $8205 = $8287 // floating-point values only
0086: $8206 = $8288 // floating-point values only
0086: $8207 = $8289 // floating-point values only

:RCRACE1_6116
if
  $8227 == 14 // integer values
jf @RCRACE1_6182
0086: $8202 = $8287 // floating-point values only
0086: $8203 = $8288 // floating-point values only
0086: $8204 = $8289 // floating-point values only
0086: $8205 = $8290 // floating-point values only
0086: $8206 = $8291 // floating-point values only
0086: $8207 = $8292 // floating-point values only

:RCRACE1_6182
if
  $8227 == 15 // integer values
jf @RCRACE1_6248
0086: $8202 = $8290 // floating-point values only
0086: $8203 = $8291 // floating-point values only
0086: $8204 = $8292 // floating-point values only
0086: $8205 = $8293 // floating-point values only
0086: $8206 = $8294 // floating-point values only
0086: $8207 = $8295 // floating-point values only

:RCRACE1_6248
if
  $8227 == 16 // integer values
jf @RCRACE1_6314
0086: $8202 = $8293 // floating-point values only
0086: $8203 = $8294 // floating-point values only
0086: $8204 = $8295 // floating-point values only
0086: $8205 = $8296 // floating-point values only
0086: $8206 = $8297 // floating-point values only
0086: $8207 = $8298 // floating-point values only

:RCRACE1_6314
if
  $8227 == 17 // integer values
jf @RCRACE1_6380
0086: $8202 = $8296 // floating-point values only
0086: $8203 = $8297 // floating-point values only
0086: $8204 = $8298 // floating-point values only
0086: $8205 = $8299 // floating-point values only
0086: $8206 = $8300 // floating-point values only
0086: $8207 = $8301 // floating-point values only

:RCRACE1_6380
if
  $8227 == 18 // integer values
jf @RCRACE1_6446
0086: $8202 = $8299 // floating-point values only
0086: $8203 = $8300 // floating-point values only
0086: $8204 = $8301 // floating-point values only
0086: $8205 = $8302 // floating-point values only
0086: $8206 = $8303 // floating-point values only
0086: $8207 = $8304 // floating-point values only

:RCRACE1_6446
if
  $8227 == 19 // integer values
jf @RCRACE1_6512
0086: $8202 = $8302 // floating-point values only
0086: $8203 = $8303 // floating-point values only
0086: $8204 = $8304 // floating-point values only
0086: $8205 = $8305 // floating-point values only
0086: $8206 = $8306 // floating-point values only
0086: $8207 = $8307 // floating-point values only

:RCRACE1_6512
if
  $8227 == 20 // integer values
jf @RCRACE1_6578
0086: $8202 = $8305 // floating-point values only
0086: $8203 = $8306 // floating-point values only
0086: $8204 = $8307 // floating-point values only
0086: $8205 = $8308 // floating-point values only
0086: $8206 = $8309 // floating-point values only
0086: $8207 = $8310 // floating-point values only

:RCRACE1_6578
if
  $8227 == 21 // integer values
jf @RCRACE1_6644
0086: $8202 = $8308 // floating-point values only
0086: $8203 = $8309 // floating-point values only
0086: $8204 = $8310 // floating-point values only
0086: $8205 = $8311 // floating-point values only
0086: $8206 = $8312 // floating-point values only
0086: $8207 = $8313 // floating-point values only

:RCRACE1_6644
if
  $8227 == 22 // integer values
jf @RCRACE1_6710
0086: $8202 = $8311 // floating-point values only
0086: $8203 = $8312 // floating-point values only
0086: $8204 = $8313 // floating-point values only
0086: $8205 = $8314 // floating-point values only
0086: $8206 = $8315 // floating-point values only
0086: $8207 = $8316 // floating-point values only

:RCRACE1_6710
if
  $8227 == 23 // integer values
jf @RCRACE1_6776
0086: $8202 = $8314 // floating-point values only
0086: $8203 = $8315 // floating-point values only
0086: $8204 = $8316 // floating-point values only
0086: $8205 = $8317 // floating-point values only
0086: $8206 = $8318 // floating-point values only
0086: $8207 = $8319 // floating-point values only

:RCRACE1_6776
if
  $8227 == 24 // integer values
jf @RCRACE1_6842
0086: $8202 = $8317 // floating-point values only
0086: $8203 = $8318 // floating-point values only
0086: $8204 = $8319 // floating-point values only
0086: $8205 = $8320 // floating-point values only
0086: $8206 = $8321 // floating-point values only
0086: $8207 = $8322 // floating-point values only

:RCRACE1_6842
if
  $8227 == 25 // integer values
jf @RCRACE1_6908
0086: $8202 = $8320 // floating-point values only
0086: $8203 = $8321 // floating-point values only
0086: $8204 = $8322 // floating-point values only
0086: $8205 = $8323 // floating-point values only
0086: $8206 = $8324 // floating-point values only
0086: $8207 = $8325 // floating-point values only

:RCRACE1_6908
if
  $8227 == 26 // integer values
jf @RCRACE1_6974
0086: $8202 = $8323 // floating-point values only
0086: $8203 = $8324 // floating-point values only
0086: $8204 = $8325 // floating-point values only
0086: $8205 = $8326 // floating-point values only
0086: $8206 = $8327 // floating-point values only
0086: $8207 = $8328 // floating-point values only

:RCRACE1_6974
if
  $8227 == 27 // integer values
jf @RCRACE1_7040
0086: $8202 = $8326 // floating-point values only
0086: $8203 = $8327 // floating-point values only
0086: $8204 = $8328 // floating-point values only
0086: $8205 = $8329 // floating-point values only
0086: $8206 = $8330 // floating-point values only
0086: $8207 = $8331 // floating-point values only

:RCRACE1_7040
if
  $8227 == 28 // integer values
jf @RCRACE1_7106
0086: $8202 = $8329 // floating-point values only
0086: $8203 = $8330 // floating-point values only
0086: $8204 = $8331 // floating-point values only
0086: $8205 = $8332 // floating-point values only
0086: $8206 = $8333 // floating-point values only
0086: $8207 = $8334 // floating-point values only

:RCRACE1_7106
if
  $8227 == 29 // integer values
jf @RCRACE1_7172
0086: $8202 = $8332 // floating-point values only
0086: $8203 = $8333 // floating-point values only
0086: $8204 = $8334 // floating-point values only
0086: $8205 = $8335 // floating-point values only
0086: $8206 = $8336 // floating-point values only
0086: $8207 = $8337 // floating-point values only

:RCRACE1_7172
if
  $8227 == 30 // integer values
jf @RCRACE1_7238
0086: $8202 = $8335 // floating-point values only
0086: $8203 = $8336 // floating-point values only
0086: $8204 = $8337 // floating-point values only
0086: $8205 = $8338 // floating-point values only
0086: $8206 = $8339 // floating-point values only
0086: $8207 = $8340 // floating-point values only

:RCRACE1_7238
if
  $8227 == 31 // integer values
jf @RCRACE1_7304
0086: $8202 = $8338 // floating-point values only
0086: $8203 = $8339 // floating-point values only
0086: $8204 = $8340 // floating-point values only
0086: $8205 = $8341 // floating-point values only
0086: $8206 = $8342 // floating-point values only
0086: $8207 = $8343 // floating-point values only

:RCRACE1_7304
if
  $8227 == 32 // integer values
jf @RCRACE1_7370
0086: $8202 = $8341 // floating-point values only
0086: $8203 = $8342 // floating-point values only
0086: $8204 = $8343 // floating-point values only
0086: $8205 = $8344 // floating-point values only
0086: $8206 = $8345 // floating-point values only
0086: $8207 = $8346 // floating-point values only

:RCRACE1_7370
if
  $8227 == 33 // integer values
jf @RCRACE1_7436
0086: $8202 = $8344 // floating-point values only
0086: $8203 = $8345 // floating-point values only
0086: $8204 = $8346 // floating-point values only
0086: $8205 = $8347 // floating-point values only
0086: $8206 = $8348 // floating-point values only
0086: $8207 = $8349 // floating-point values only

:RCRACE1_7436
if
  $8227 == 34 // integer values
jf @RCRACE1_7502
0086: $8202 = $8347 // floating-point values only
0086: $8203 = $8348 // floating-point values only
0086: $8204 = $8349 // floating-point values only
0086: $8205 = $8350 // floating-point values only
0086: $8206 = $8351 // floating-point values only
0086: $8207 = $8352 // floating-point values only

:RCRACE1_7502
if
  $8227 == 35 // integer values
jf @RCRACE1_7568
0086: $8202 = $8350 // floating-point values only
0086: $8203 = $8351 // floating-point values only
0086: $8204 = $8352 // floating-point values only
0086: $8205 = $8353 // floating-point values only
0086: $8206 = $8354 // floating-point values only
0086: $8207 = $8355 // floating-point values only

:RCRACE1_7568
if
  $8227 == 36 // integer values
jf @RCRACE1_7634
0086: $8202 = $8353 // floating-point values only
0086: $8203 = $8354 // floating-point values only
0086: $8204 = $8355 // floating-point values only
0086: $8205 = $8356 // floating-point values only
0086: $8206 = $8357 // floating-point values only
0086: $8207 = $8358 // floating-point values only

:RCRACE1_7634
if
  $8227 == 37 // integer values
jf @RCRACE1_7700
0086: $8202 = $8356 // floating-point values only
0086: $8203 = $8357 // floating-point values only
0086: $8204 = $8358 // floating-point values only
0086: $8205 = $8359 // floating-point values only
0086: $8206 = $8360 // floating-point values only
0086: $8207 = $8361 // floating-point values only

:RCRACE1_7700
if
  $8227 == 38 // integer values
jf @RCRACE1_7766
0086: $8202 = $8359 // floating-point values only
0086: $8203 = $8360 // floating-point values only
0086: $8204 = $8361 // floating-point values only
0086: $8205 = $8362 // floating-point values only
0086: $8206 = $8363 // floating-point values only
0086: $8207 = $8364 // floating-point values only

:RCRACE1_7766
if
  $8227 == 39 // integer values
jf @RCRACE1_7832
0086: $8202 = $8362 // floating-point values only
0086: $8203 = $8363 // floating-point values only
0086: $8204 = $8364 // floating-point values only
0086: $8205 = $8365 // floating-point values only
0086: $8206 = $8366 // floating-point values only
0086: $8207 = $8367 // floating-point values only

:RCRACE1_7832
if
  $8227 == 40 // integer values
jf @RCRACE1_7898
0086: $8202 = $8365 // floating-point values only
0086: $8203 = $8366 // floating-point values only
0086: $8204 = $8367 // floating-point values only
0086: $8205 = $8368 // floating-point values only
0086: $8206 = $8369 // floating-point values only
0086: $8207 = $8370 // floating-point values only

:RCRACE1_7898
if
  $8227 == 41 // integer values
jf @RCRACE1_7964
0086: $8202 = $8368 // floating-point values only
0086: $8203 = $8369 // floating-point values only
0086: $8204 = $8370 // floating-point values only
0086: $8205 = $8371 // floating-point values only
0086: $8206 = $8372 // floating-point values only
0086: $8207 = $8373 // floating-point values only

:RCRACE1_7964
if
  $8227 == 42 // integer values
jf @RCRACE1_8030
0086: $8202 = $8371 // floating-point values only
0086: $8203 = $8372 // floating-point values only
0086: $8204 = $8373 // floating-point values only
0086: $8205 = $8374 // floating-point values only
0086: $8206 = $8375 // floating-point values only
0086: $8207 = $8376 // floating-point values only

:RCRACE1_8030
if
  $8227 == 43 // integer values
jf @RCRACE1_8096
0086: $8202 = $8374 // floating-point values only
0086: $8203 = $8375 // floating-point values only
0086: $8204 = $8376 // floating-point values only
0086: $8205 = $8377 // floating-point values only
0086: $8206 = $8378 // floating-point values only
0086: $8207 = $8379 // floating-point values only

:RCRACE1_8096
if
  $8227 == 44 // integer values
jf @RCRACE1_8162
0086: $8202 = $8377 // floating-point values only
0086: $8203 = $8378 // floating-point values only
0086: $8204 = $8379 // floating-point values only
0086: $8205 = $8380 // floating-point values only
0086: $8206 = $8381 // floating-point values only
0086: $8207 = $8382 // floating-point values only

:RCRACE1_8162
if
  $8227 == 45 // integer values
jf @RCRACE1_8228
0086: $8202 = $8380 // floating-point values only
0086: $8203 = $8381 // floating-point values only
0086: $8204 = $8382 // floating-point values only
0086: $8205 = $8383 // floating-point values only
0086: $8206 = $8384 // floating-point values only
0086: $8207 = $8385 // floating-point values only

:RCRACE1_8228
if
  $8227 == 46 // integer values
jf @RCRACE1_8294
0086: $8202 = $8383 // floating-point values only
0086: $8203 = $8384 // floating-point values only
0086: $8204 = $8385 // floating-point values only
0086: $8205 = $8386 // floating-point values only
0086: $8206 = $8387 // floating-point values only
0086: $8207 = $8388 // floating-point values only

:RCRACE1_8294
if
  $8227 == 47 // integer values
jf @RCRACE1_8360
0086: $8202 = $8386 // floating-point values only
0086: $8203 = $8387 // floating-point values only
0086: $8204 = $8388 // floating-point values only
0086: $8205 = $8389 // floating-point values only
0086: $8206 = $8390 // floating-point values only
0086: $8207 = $8391 // floating-point values only

:RCRACE1_8360
if
  $8227 == 48 // integer values
jf @RCRACE1_8426
0086: $8202 = $8389 // floating-point values only
0086: $8203 = $8390 // floating-point values only
0086: $8204 = $8391 // floating-point values only
0086: $8205 = $8392 // floating-point values only
0086: $8206 = $8393 // floating-point values only
0086: $8207 = $8394 // floating-point values only

:RCRACE1_8426
if
  $8227 == 49 // integer values
jf @RCRACE1_8492
0086: $8202 = $8392 // floating-point values only
0086: $8203 = $8393 // floating-point values only
0086: $8204 = $8394 // floating-point values only
0086: $8205 = $8392 // floating-point values only
0086: $8206 = $8393 // floating-point values only
0086: $8207 = $8394 // floating-point values only

:RCRACE1_8492
return

:RCRACE1_8494
$8217 = Car.Health($8218)
if
  500 > $8217 // integer values
jf @RCRACE1_8529
Car.Health($8218) = 1000

:RCRACE1_8529
if
   not Car.Wrecked($8219)
jf @RCRACE1_8795
if
003A:   $8223 == $8227 // integer values and handles
jf @RCRACE1_8769
Car.StorePos($8218, $8157, $8158, $8159)
0086: $8161 = $8157 // floating-point values only
0061: $8161 -= $8187 // floating-point values
0086: $8162 = $8158 // floating-point values only
0061: $8162 -= $8188 // floating-point values
0069: $8161 *= $8161 // floating-point values
0069: $8162 *= $8162 // floating-point values
0086: $8163 = $8161 // floating-point values only
0059: $8163 += $8162 // floating-point values
01FB: $8167 = square_root $8163
Car.StorePos($8219, $8157, $8158, $8159)
0086: $8161 = $8157 // floating-point values only
0061: $8161 -= $8187 // floating-point values
0086: $8162 = $8158 // floating-point values only
0061: $8162 -= $8188 // floating-point values
0069: $8161 *= $8161 // floating-point values
0069: $8162 *= $8162 // floating-point values
0086: $8163 = $8161 // floating-point values only
0059: $8163 += $8162 // floating-point values
01FB: $8168 = square_root $8163
if
0024:   $8168 > $8167 // floating-point values only
jf @RCRACE1_8762
$8228 += 1 // integer values

:RCRACE1_8762
jump @RCRACE1_8795

:RCRACE1_8769
if
001C:   $8227 > $8223 // integer values
jf @RCRACE1_8795
$8228 += 1 // integer values

:RCRACE1_8795
return
